;;
;; Driver PVT model : Night A
;; 
(set-task "actr.tasks.drivingPVT.DrivingPVT")

(set-schedule 
    (8.0 22.0)(32.0 46.0)(56.0 70.0)(80.0 94.0)(104.0 118.0)(128.0 142.0)(152.0 166.0)
    (176.0 190.0)(200.0 214.0)(224.0 238.0)(248.0 262.0)(272.0 286.0)(296.0 310.0)(320.0 334.0)
)

(set-task-schedule 
    ;; //
    58.0    61.0    64.0    67.0   ;; // day2
    82.0    85.0    88.0    91.0   ;; // day3
    106.0  109.0  112.0  115.0 ;; // day4
    130.0  133.0  136.0  139.0 ;; // day5
    154.0  157.0  160.0  163.0 ;; // day6
    
    202.0  205.0  208.0  211.0 ;; // day9
    226.0  229.0  232.0  235.0 ;; // day10
    250.0  253.0  256.0  259.0 ;; // day11
    274.0  277.0  280.0  283.0 ;; // day12
    298.0  301.0  304.0  307.0 ;; // day13
    
)

(set-task-duration 600.0) ;;2100

(set-output-dir "./result/DayA/PVT_Post")

(add-dm
    (goal isa goal state wait)
)

(sgp 
    :cst nil
    :v nil
    :fatigue t 
    :fatigue-partial-matching t
    :iu 1.56
    :ut 1.15
    ;; (IU-(fpbmc*BioMath)) - (UT-(utbmc*BioMath)) = X
    ;; BioMath(utbmc-fpbmc) + IU - UT0 = X
    ;; best value for  BioMath=4.26 (10am) : X=
    ;; IU = BM * ( fpbmc - utbmc ) + X + UT0
    
    ;;:microlapses nil
    :fpbmc .028
    :fpmc .12 ;;.13
    :fpmc0 0
    
    :utbmc .01
    :utmc  .04 ;;.02
    :utmc0 0
    
    :fp-dec 0.006
    
    :egs .25
    ;:cst t
    
    :dat .05
    :randomize-time t
    :vpft t
    
    :motor-feature-prep-time 0 ; .05
    :max-prep-time-diff 10.0  
    :visual-attention-latency .055 ; .035
)


(goal-focus goal)

(p wait 
    =goal>
        isa goal
        state                 wait
        - state                 none
        state =state
    ?visual-location>
        buffer empty
==>
    !eval! (fatigue-reset-percentage)
    !eval! (fatigue-utility-dec-on)
)
;(spp :u 1)

(p attend-stimulus
    =goal>
        isa goal
        state  wait
    =visual-location>
        isa visual-location
    ?visual>
        state free
==>
    !eval! (fatigue-reset-percentage)
    !eval! (fatigue-utility-dec-on)
    +visual>               
        isa	move-attention
        screen-pos =visual-location
    =goal>
        state attending-stimulus
)
;(spp :u 1)

(p see-stimulus*respond
    =goal>
        isa goal
        state attending-stimulus
    =visual>
        isa text
        value =val
    ?manual>
        state free 
==>
    !eval! (fatigue-reset-percentage)
    !eval! (fatigue-utility-dec-on)
    !output! (=visual)
    !output! (=val)
    +manual>
        isa press-key
        key space
    =goal>
        state wait
    +visual>
        isa clear
)
;(spp :u 1)

#|
(p press-key 
    =goal>
        isa goal
        state wait
    ?manual>
        state free 
==>
    !eval! (fatigue-reset-percentage)
    !eval! (fatigue-utility-dec-off)
    !output! ("***  press Key - False Start  ***")
    +manual>
        isa press-key
        key space
    =goal>
        state wait
)
(spp :u -1000)
|#